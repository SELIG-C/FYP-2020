04/02/2020
I can make the float smash into the platform, so that's nice. 
Just have to whack the damping constant way up in the passive model.
Turning it down actually stops the simulation from running for some reason.

As a guess if it goes too far above the surface the kinematics must completely 
break down as centre of mass =/= centre of buoyancy in that case.

05/02/2020

Think the constraint thing can't be explained by centre of buoyancy stuff. 
Errors indicate nastier bugs than that. At the end of the simulation the
graphs that are automatically produced throw errors and go unlabeled/non-existant.
Seems to be an issue with how 'legend' is used, could be a versioning issue.

06/02/2020
Ringwood paper says that the state vector is made of a 'reference velocity' based on
wave excitation force. This can be perfectly known to begin with but will need
kalman filter estimation etc. later.

Have plugged the wave excitation force straight into the control system instead of the
placeholder of zeros. The system runs and is wildly more unstable. Success! Now for some tuning?

Qs for Andy:
	How do I get a readout of things in the simulink file? Can I just shove an Oscilloscope on it
	and run wecSim? How do I know what form they're in (matrix, vector, etc)
	A: Run wecSim, then re-open model. Data is stored

	wecSim can't output the charts it wants to at the end due to what I think is a versioning bug.
	should I attempt to fix or is it superceded by the results plotter?

	Am I right that reference velocity is External F_ex / some constant ? can I play with that for now?
	A: Ref velocity in surge and heave, check ewtec paper. 
	H(t) = radiation force transfer function (in radiation transfer func files, two files from Andy)

	What does the desired behaviour look like?  It looks like it following the reference velocity (velocity and trajectory and velocity-trajectory are interchangable terms)
	WecSim doesn't model the float ever breaking the surface. Rely on constraints (5m)
	Make postprocessing that compares ref_velocity to float velocities. (probs only care about heave and surge for now)

	Zi is the 'intrinsic impedance of the system'... wut?
	A: Zi is the transfer function of the device (the Plant). described in the model and in Andy's papers.
	Also in SSModel_calc. Will be a bit of work to create, potential source of study.


	Can shorten sim time in wecSim input file. Full runs typically 700s (length of wave file). First 100s are waves being developed
	and will be discarded for power analysis.

IMPORTANT: 'bdclose' can be used in the CLI to clear simulink memory and allow a different model to be loaded.

plot_output doesn't give float data, only F_ex data, which is invariant for different control schemes.

two files from andy are continuous time transfer functions (numerators and denominators for 4th order freq. domain)
could use with bode command, would give amp vs. freq. (vector of frequencies plus corresponding frequencies) multiply by 2, ^-1, that's the 1/2B(omega) = 1/H(t)
MIND Hz =/= rads !

Andy has already done EKF in his papers, need to select dominant frequency from vector of velocities against frequencies
Take data out of wecSim to play with for speed? Build own model?

For now: figure out what B is, and how to get a ref velocity trajectory out of it.
Do it in a new simulink model, sin wave input (known frequency)

10/02/2020
Create a bode plot for each transfer function, create a lookup table with freq as input -> amplitude as output.
Use eqn's (1/2B etc.) to create something that turns F_ex into reference velocities

13/02/2020
Make sure lookup table amplitudes not in dB.

ACTUALLY do 1/2B

May be able to invert state space by converting to transfer functions
ss2tf suitable

Check responses using step input, match between freq domain and time domain versions.

Read around a bit. Avoid improper transfer functions. Maybe try other approaches for completeness and viva-proofness.

ss2tf is a relevant matlab function.

Matlab has a rank function, there is a paper on the Left invertibility of SISO systems.

Need to scale heave&surge transfer functions! See Andy email. Scale in the same way that SS_Model Calc does.


17/02/2020
Do bode plot of tf2ss inverse funcs, check for stability.
Get kalman block from kush.

--SLOW DOWN-- document.

Time delay MIMO method not a goner! Columns not rank.

18/02/2020
-ss2tf implementation was a buggy mess. Have done properly now. Simulink won't even accept improper TFs in a TF block, so previous TFs can't have been improper and were therefore wrong.
-gotta ACTUALLY use ss2tf for it to be effective. Think I was just turning values in the SS matrix into tfs before lol. Put everything in inputfile.m (-> config.m?)
-ss2tf works by unit impulse to one input (of our 6). Gives TFs for all outputs. Only took heave and surge since the rest are v. small, but there might be some use in taking cross terms.
	-Andy says avoid cross terms at all costs.

ERROR SIGNAL REDUCED BY PROPER TFs. (Doesn't decay though).

With full implementation of the system the output velocity trajectory tracks the input velocity trajectory perfectly but at a smaller amplitude.

Whacking a huge gain in there appears to fix this, but surely there has to be a better way? Some kind of scaling error is occuring maybe? Need to ask Andy.

19/02/2020
Things I tried:
-Using PI control instead of filter (can't use D because it makes the TF improper)
-tuning the filter so that the bode plot for the heave TF is steady above and below the break point.
-flipping the sign of the summing junction around in the controller (negative/positive feedback??)

Confirmed that there is a zero at 0,0 for a pzmap of the state space model (both heave and surge). Needs a pole to balance as per ringwood.

bandpass filter is to take only resonant peak? Dunno.

poles at -0.0313 +- 0.655j. hence zeroes at same points in inverse model. Need to balance? both have freq 0.655

used bandass frequencies of 0.5 and 2pi based on bode break points. added a constant gain to the filter. Tuned it to 1.4. Success!

Some kind of interaction between the 5s^2 and the 1.4 gain? Why didn't it behave the same when I tuned the 5?

Scratch that it works the same.

Summary for Andy: I've got this thing that seems to work ok, what's the justification behind what I did? What methodical tuning method should I use?
Is the phase shift a problem?

20/02/2020
period range of interest: 6secs to 16 secs : 1 rad/s to ...

period case of interest is mucked up by low pass filter maybe. Seems to be the case?

Start a living document. Make a figure production script. Record stuff.

Time to reorganise the files.

26/02/2020
Files re-organised, captured plots, wrote informal notes about filter design. Found design problems!
It seems like the tracking is pretty good most of the time, but it seems like the frequency of the system is less than the frequency of the reference velocity?
This isn't so bad at high frequencies but at low frequencies it's extremely bad.
I'm not sure this can be explained by phase lag, the signals start perfectly in phase but then obvs have different frequencies.
Is this just an effect of damping in the system? Can it be controlled for?

Actually it might really be phase lag. This can be adjusted for by making the bandpass filter have a super steep phase gradient to counter the
similarly steep phase switch of the plant.

I think this will still result in a bunch of phase lag near the resonant peak, but maybe it can be brought way down. How far down is enough?

Attempts and observations:
First theory: making the average of the cut-off frequncies equal the resonant frequency should give optimal design. resonant frequancy roughly equals 0.2pi

0 and 0.4pi:
Low frequencies get a phase lag of -90, unacceptable. Phase not all that steep either.

0.1pi and 0.3pi:
Steeper attenutation and it does tend to 0 phase lag on both sides at least.

0.19pi and 0.21pi
Blrgh

Andy had a look at the model and concluded that the lag is inevitable and unacceptable. Probably due to the high order of the SS_inverse transfer functions.

27/02/2020

I DID IT! LEFT SS INVERSE!

Looking for good tracking, quantify error in terms of amplitude and phase error for each period/frequency of wave. (1 for heave and 1 for surge).
This is a way to show all the system characteristics in 1 or 2 graphs.

Capture process.

20/3/2020
Oof, haven't logged in nearly a month. That's bad. To be fair everything's been crazy.
Did the presentation, got a first.
Had the first assessor meeting, went very well. Notes on methodology.

Implemented Kalman filter block, got it from Kush. Tracking is surprisingly good but falls short of extreme peaks. Perhaps that is desirable.
A basic integration shows no sinking in position, instead it's all over the place, but the sample time is only 300s so it may be necessary to generate longer data.

Generated some irregular wave data. Not comprehensive but enough to play around with. Full testing will come later and could be automated.

Got a text from Andy explaining how the q parameter works. It's dense. Will need some time to comprehend. Obvs for my test model the tracking should be near perfect
since the plant is the same state space model the IMC uses.

Going to put my current control system into wecSim just to see what happens. Get a preliminary feel. Some kind of port dimension problem? A bit confusing since the output should be the same size as the input.

L was set to 1 for some reason? Confusing. Fixed by re-running SSModel_Calc

Model loads now, but the float doesn't move at all. V. odd

24/03/2020
-Produce weekly report for Andy.
-Use the batch file for testing! Can run lots of wecSim instances with different sea-states 'Run_TDA.m'
-Plot EKF Amplitude over actual Excitation Force. Send Andy this plot today.
-3m restriction on surge, 5m restriction on heave. Andy's latest use.
-0 mean method.
-Use ODE-45 Runge-Kutta for state space model.

26/03/2020
Implemented constraints. System becomes massively unstable over time. Confusing! Why does this happen?
The EKF amplitudes seem fine.This doesn't happen in the unconstrained version. What about adding the constraints has caused this instability??

Would a filter fix it?

Need to ask Andy.

Might be taking the wrong amplitude for A-hat! Should probably take the one given by the adaptive law, not the output of the EKF.
If this is the case could use PLL in place of EKF. Benefit is a maybe.

27/03/2020
All the bugs are due to the freaking time-steps.

Places where time-steps exist (and should probably be centralised):

-In the kalman filter code.
-In the zero-order holds
-In the input file
-In the simulink environment